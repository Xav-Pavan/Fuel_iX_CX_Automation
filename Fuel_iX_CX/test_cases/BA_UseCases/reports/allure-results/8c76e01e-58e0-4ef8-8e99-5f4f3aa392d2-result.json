{"name": "test_verify_the_schedule_call_back", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nCall log:\n  - waiting for get_by_text(\"one\", exact=True)\n  -     - locator resolved to <span class=\"\" title=\"one\" id=\"2kuhlH43XcHxSKQoYc4bpffQ0Op\">one</span>\n  -   - attempting click action\n  -     - waiting for element to be visible, enabled and stable\n  -     - element is visible, enabled and stable\n  -     - scrolling into view if needed\n  -     - done scrolling\n  -     - performing click action", "trace": "page_fixture = <Page url='https://mqa2.xavlab.xyz/central-repository/1923lzObe40vNPfvY2HPh9bcYnv/2fUAwXHlPxwUTfHScmCnynNSXbB'>\n\n    @allure.feature(\"Schedule_Call_Back\")\n    # def test_verify_the_schedule_call_back(page_fixture, username, password,domain, title1, question1, answer1):\n    def test_verify_the_schedule_call_back(page_fixture):\n        username = get_scb_test_data()[\"valid_user\"][\"username\"]\n        password = get_scb_test_data()[\"valid_user\"][\"password\"]\n        domain = get_scb_test_data()[\"valid_user\"][\"domain\"]\n    \n        getAvailableNodeTitle = get_scb_test_data()[\"Schedule_Callback_Get_Available_Slots\"][\"NodetemplateTitle\"]\n        getAvailableNodeQuestion = get_scb_test_data()[\"Schedule_Callback_Get_Available_Slots\"][\"nodequestion\"]\n        getAvailableNodeTextCard = get_scb_test_data()[\"Schedule_Callback_Get_Available_Slots\"][\"textcardmsg\"]\n    \n        newCallBackNodeTitle = get_scb_test_data()[\"Schedule_New_CallBack_Request\"][\"NodetemplateTitle\"]\n        newCallBackNodeQuestion = get_scb_test_data()[\"Schedule_New_CallBack_Request\"][\"nodequestion\"]\n        newCallBackNodeTextCard = get_scb_test_data()[\"Schedule_New_CallBack_Request\"][\"textcardmsg\"]\n    \n        bookingSuccessNodeTitle = get_scb_test_data()[\"Booking_Success\"][\"NodetemplateTitle\"]\n        bookingSuccessNodeQuestion = get_scb_test_data()[\"Booking_Success\"][\"nodequestion\"]\n        bookingSuccessNodeTextCard = get_scb_test_data()[\"Booking_Success\"][\"textcardmsg\"]\n    \n        rescheduleCallBackNodeTitle = get_scb_test_data()[\"Reschedule_CallBack_Request\"][\"NodetemplateTitle\"]\n        rescheduleCallBackNodeQuestion = get_scb_test_data()[\"Reschedule_CallBack_Request\"][\"nodequestion\"]\n        rescheduleCallBackNodeTextCard = get_scb_test_data()[\"Reschedule_CallBack_Request\"][\"textcardmsg\"]\n    \n        issueOccuredNodeTitle = get_scb_test_data()[\"Issue_Occurred\"][\"NodetemplateTitle\"]\n        issueOccuredNodeQuestion = get_scb_test_data()[\"Issue_Occurred\"][\"nodequestion\"]\n        issueOccuredNodeTextCard = get_scb_test_data()[\"Issue_Occurred\"][\"textcardmsg\"]\n    \n        bookingfailedNodeTitle = get_scb_test_data()[\"CallBack_Booking_Failed\"][\"NodetemplateTitle\"]\n        bookingfailedNodeQuestion = get_scb_test_data()[\"CallBack_Booking_Failed\"][\"nodequestion\"]\n        bookingfailedNodeTextCard = get_scb_test_data()[\"CallBack_Booking_Failed\"][\"textcardmsg\"]\n    \n        cancelingCallBackNodeTitle = get_scb_test_data()[\"Canceling_CallBack_Request\"][\"NodetemplateTitle\"]\n        cancelingCallBackNodeQuestion = get_scb_test_data()[\"Canceling_CallBack_Request\"][\"nodequestion\"]\n        cancelingCallBackNodeTextCard = get_scb_test_data()[\"Canceling_CallBack_Request\"][\"textcardmsg\"]\n    \n        \"\"\"\n        Test to verify the 'Schedule Call Back' feature.\n        User Request: Customers initiate a callback request through a chatbot, web form, or mobile app.\n        Slot Selection: Users can select the earliest available time slot or choose a preferred time.\n        Confirmation: The system provides a confirmation message once the request is scheduled.\n        Rescheduling & Cancellation: Users can modify or cancel their scheduled callback if needed.\n        Agent Assignment: The system assigns an available agent based on business rules and customer priority.\n        \"\"\"\n    \n        page = page_fixture  # Playwright page instance\n    \n        # Initialize all page objects using a single function\n        pages = initialize_page_objects(page)\n    \n        with allure.step(\"Navigating to Login Page\"):\n            pages[\"login_page\"].navigateToURL()\n    \n        with allure.step(f\"Logging in as {username}\"):\n            pages[\"login_page\"].loginDetails(username, domain, password)\n    \n        with allure.step(\" dasboard page\"):\n            pages[\"dashboard_page\"].analytics_Page_Validation()\n            pages[\"dashboard_page\"].click_central_repository_icon()\n        with allure.step(\" centralRepo page\"):\n            pages[\"centralrepo_page\"].click_flowtype_central_repository_icon()\n    \n        with allure.step(\"New Intent Template Inside Flow Repo\"):\n>           pages[\"flowrepo_page\"].navigate_to_new_folder_to_add_new_intent()\n\ntest_Automated_Schedule_Call_Back.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pages\\module_pages\\flowrepository_page.py:24: in navigate_to_new_folder_to_add_new_intent\n    flowrepolocators.ONE_SUB_FOLDER.click()\n..\\..\\..\\..\\..\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15450: in click\n    self._sync(\n..\\..\\..\\..\\..\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n..\\..\\..\\..\\..\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n..\\..\\..\\..\\..\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000019EB11B78C0>\ncb = <function Channel.send.<locals>.<lambda> at 0x0000019EB1AC2AC0>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nE           Call log:\nE             - waiting for get_by_text(\"one\", exact=True)\nE             -     - locator resolved to <span class=\"\" title=\"one\" id=\"2kuhlH43XcHxSKQoYc4bpffQ0Op\">one</span>\nE             -   - attempting click action\nE             -     - waiting for element to be visible, enabled and stable\nE             -     - element is visible, enabled and stable\nE             -     - scrolling into view if needed\nE             -     - done scrolling\nE             -     - performing click action\n\n..\\..\\..\\..\\..\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TargetClosedError"}, "steps": [{"name": "Initializing Page Objects", "status": "passed", "start": 1741347403850, "stop": 1741347403850}, {"name": "Navigating to Login Page", "status": "passed", "steps": [{"name": "Navigating to the website", "status": "passed", "start": 1741347403851, "stop": 1741347410612}], "start": 1741347403851, "stop": 1741347410612}, {"name": "Logging in as puchha.pavan@telusinternational.com", "status": "passed", "steps": [{"name": "Logging in with provided credentials", "status": "passed", "steps": [{"name": "Entering username", "status": "passed", "start": 1741347410613, "stop": 1741347411757}, {"name": "Clicking 'Next' after entering username", "status": "passed", "start": 1741347411757, "stop": 1741347411918}, {"name": "Entering domain name", "status": "passed", "start": 1741347411918, "stop": 1741347412879}, {"name": "Clicking 'Next' after entering domain", "status": "passed", "start": 1741347412879, "stop": 1741347412991}, {"name": "Entering password", "status": "passed", "start": 1741347412991, "stop": 1741347413062}, {"name": "Clicking login button to authenticate", "status": "passed", "start": 1741347413063, "stop": 1741347413165}], "parameters": [{"name": "userName", "value": "'puchha.pavan@telusinternational.com'"}, {"name": "domainName", "value": "'xd'"}, {"name": "passWord", "value": "'*Pavan@7351'"}], "start": 1741347410612, "stop": 1741347415166}], "start": 1741347410612, "stop": 1741347415166}, {"name": " dasboard page", "status": "passed", "steps": [{"name": "Validating Reposrts and analytics Dashboard page", "status": "passed", "start": 1741347415166, "stop": 1741347415257}], "start": 1741347415166, "stop": 1741347415528}, {"name": " centralRepo page", "status": "passed", "start": 1741347415528, "stop": 1741347415903}, {"name": "New Intent Template Inside Flow Repo", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nCall log:\n  - waiting for get_by_text(\"one\", exact=True)\n  -     - locator resolved to <span class=\"\" title=\"one\" id=\"2kuhlH43XcHxSKQoYc4bpffQ0Op\">one</span>\n  -   - attempting click action\n  -     - waiting for element to be visible, enabled and stable\n  -     - element is visible, enabled and stable\n  -     - scrolling into view if needed\n  -     - done scrolling\n  -     - performing click action\n\n", "trace": "  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\Playwright_Automation\\Fuel_iX_CX_Automation\\Fuel_iX_CX\\test_cases\\BA_UseCases\\test_Automated_Schedule_Call_Back.py\", line 69, in test_verify_the_schedule_call_back\n    pages[\"flowrepo_page\"].navigate_to_new_folder_to_add_new_intent()\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\Playwright_Automation\\Fuel_iX_CX_Automation\\Fuel_iX_CX\\pages\\module_pages\\flowrepository_page.py\", line 24, in navigate_to_new_folder_to_add_new_intent\n    flowrepolocators.ONE_SUB_FOLDER.click()\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 15450, in click\n    self._sync(\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py\", line 156, in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 488, in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "start": 1741347415903, "stop": 1741347417989}], "attachments": [{"name": "log", "source": "504b59f6-29e9-4dad-ac42-bf10d8146e71-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "c4ccedb2-d6c6-4a4f-9cf5-e67938ec2593-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "eff6434a-a15d-4902-ac3e-3cc5bb54039a-attachment.txt", "type": "text/plain"}], "start": 1741347403838, "stop": 1741347417993, "uuid": "4b281da4-721f-4cf8-b580-022158aac667", "historyId": "461494865b0551186fb8dc66e83a9da7", "testCaseId": "461494865b0551186fb8dc66e83a9da7", "fullName": "test_Automated_Schedule_Call_Back#test_verify_the_schedule_call_back", "labels": [{"name": "feature", "value": "Schedule_Call_Back"}, {"name": "suite", "value": "test_Automated_Schedule_Call_Back"}, {"name": "host", "value": "BA-000311899"}, {"name": "thread", "value": "22360-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Automated_Schedule_Call_Back"}]}
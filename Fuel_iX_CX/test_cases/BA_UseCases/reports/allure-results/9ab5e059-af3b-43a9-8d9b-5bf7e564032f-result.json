{"name": "test_verify_the_schedule_call_back", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nCall log:\n  - waiting for locator(\"xpath=(//div[@title='Reschedule_CallBack_Request'])[1]\")", "trace": "page_fixture = <Page url='https://mqa2.xavlab.xyz/chat-bot'>\n\n    @allure.feature(\"Schedule_Call_Back\")\n    # def test_verify_the_schedule_call_back(page_fixture, username, password,domain, title1, question1, answer1):\n    def test_verify_the_schedule_call_back(page_fixture):\n        username = get_scb_test_data()[\"valid_user\"][\"username\"]\n        password = get_scb_test_data()[\"valid_user\"][\"password\"]\n        domain = get_scb_test_data()[\"valid_user\"][\"domain\"]\n    \n        getAvailableNodeTitle = get_scb_test_data()[\"Schedule_Callback_Get_Available_Slots\"][\"NodetemplateTitle\"]\n        getAvailableNodeQuestion = get_scb_test_data()[\"Schedule_Callback_Get_Available_Slots\"][\"nodequestion\"]\n        getAvailableNodeTextCard = get_scb_test_data()[\"Schedule_Callback_Get_Available_Slots\"][\"textcardmsg\"]\n    \n        newCallBackNodeTitle = get_scb_test_data()[\"Schedule_New_CallBack_Request\"][\"NodetemplateTitle\"]\n        newCallBackNodeQuestion = get_scb_test_data()[\"Schedule_New_CallBack_Request\"][\"nodequestion\"]\n        newCallBackNodeTextCard = get_scb_test_data()[\"Schedule_New_CallBack_Request\"][\"textcardmsg\"]\n    \n        bookingSuccessNodeTitle = get_scb_test_data()[\"Booking_Success\"][\"NodetemplateTitle\"]\n        bookingSuccessNodeQuestion = get_scb_test_data()[\"Booking_Success\"][\"nodequestion\"]\n        bookingSuccessNodeTextCard = get_scb_test_data()[\"Booking_Success\"][\"textcardmsg\"]\n    \n        rescheduleCallBackNodeTitle = get_scb_test_data()[\"Reschedule_CallBack_Request\"][\"NodetemplateTitle\"]\n        rescheduleCallBackNodeQuestion = get_scb_test_data()[\"Reschedule_CallBack_Request\"][\"nodequestion\"]\n        rescheduleCallBackNodeTextCard = get_scb_test_data()[\"Reschedule_CallBack_Request\"][\"textcardmsg\"]\n    \n        issueOccuredNodeTitle = get_scb_test_data()[\"Issue_Occurred\"][\"NodetemplateTitle\"]\n        issueOccuredNodeQuestion = get_scb_test_data()[\"Issue_Occurred\"][\"nodequestion\"]\n        issueOccuredNodeTextCard = get_scb_test_data()[\"Issue_Occurred\"][\"textcardmsg\"]\n    \n        bookingfailedNodeTitle = get_scb_test_data()[\"CallBack_Booking_Failed\"][\"NodetemplateTitle\"]\n        bookingfailedNodeQuestion = get_scb_test_data()[\"CallBack_Booking_Failed\"][\"nodequestion\"]\n        bookingfailedNodeTextCard = get_scb_test_data()[\"CallBack_Booking_Failed\"][\"textcardmsg\"]\n    \n        cancelingCallBackNodeTitle = get_scb_test_data()[\"Canceling_CallBack_Request\"][\"NodetemplateTitle\"]\n        cancelingCallBackNodeQuestion = get_scb_test_data()[\"Canceling_CallBack_Request\"][\"nodequestion\"]\n        cancelingCallBackNodeTextCard = get_scb_test_data()[\"Canceling_CallBack_Request\"][\"textcardmsg\"]\n    \n        \"\"\"\n        Test to verify the 'Schedule Call Back' feature.\n        User Request: Customers initiate a callback request through a chatbot, web form, or mobile app.\n        Slot Selection: Users can select the earliest available time slot or choose a preferred time.\n        Confirmation: The system provides a confirmation message once the request is scheduled.\n        Rescheduling & Cancellation: Users can modify or cancel their scheduled callback if needed.\n        Agent Assignment: The system assigns an available agent based on business rules and customer priority.\n        \"\"\"\n    \n        page = page_fixture  # Playwright page instance\n    \n        # Initialize all page objects using a single function\n        pages = initialize_page_objects(page)\n    \n        with allure.step(\"Navigating to Login Page\"):\n            pages[\"login_page\"].navigateToURL()\n    \n        with allure.step(f\"Logging in as {username}\"):\n            pages[\"login_page\"].loginDetails(username, domain, password)\n    \n        with allure.step(\" dashboard page\"):\n            pages[\"dashboard_page\"].analytics_Page_Validation()\n            pages[\"dashboard_page\"].click_central_repository_icon()\n        with allure.step(\" centralRepo page\"):\n            pages[\"centralrepo_page\"].click_flowtype_central_repository_icon()\n    \n        with allure.step(\"New Intent Template Inside Flow Repo\"):\n            pages[\"flowrepo_page\"].navigate_to_new_folder_to_add_new_intent()\n            pages[\"intentTemplate_page\"].add_template_name_to_new_intent()\n            pages[\"scb_page\"].creating_schedule_callback_scenerio_get_available_slots_node(getAvailableNodeTitle,\n                                                                                           getAvailableNodeQuestion,\n                                                                                           getAvailableNodeTextCard)\n            pages[\"scb_page\"].creating_schedule_new_callBack_request_node(newCallBackNodeTitle, newCallBackNodeQuestion,\n                                                                          newCallBackNodeTextCard)\n            pages[\"scb_page\"].creating_booking_success_node(bookingSuccessNodeTitle, bookingSuccessNodeQuestion,\n                                                            bookingSuccessNodeTextCard)\n            pages[\"scb_page\"].creating_reschedule_callBack_request_node(rescheduleCallBackNodeTitle,\n                                                                        rescheduleCallBackNodeQuestion,\n                                                                        rescheduleCallBackNodeTextCard)\n            pages[\"scb_page\"].creating_issue_occured_node(issueOccuredNodeTitle, issueOccuredNodeQuestion,\n                                                          issueOccuredNodeTextCard)\n            pages[\"scb_page\"].creating_callBack_booking_failed_node(bookingfailedNodeTitle, bookingfailedNodeQuestion,\n                                                                    bookingfailedNodeTextCard)\n            pages[\"scb_page\"].creating_canceling_callBack_request_node(cancelingCallBackNodeTitle,\n                                                                       cancelingCallBackNodeQuestion,\n                                                                       cancelingCallBackNodeTextCard)\n    \n        with allure.step(\"Editing Schedule Callback Nodes\"):\n            pages[\"scb_page\"].editing_Schedule_Callback_Get_Available_Slots_Node()\n            pages[\"scb_page\"].editing_Schedule_New_CallBack_Request_Node()\n            pages[\"scb_page\"].editing_Booking_Success_Node()\n>           pages[\"scb_page\"].editing_Reschedule_CallBack_Request_Node()\n\ntest_Automated_Schedule_Call_Back.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pages\\use_cases_pages\\Schedule_Call_Back_Pages\\scb_page.py:724: in editing_Reschedule_CallBack_Request_Node\n    self.locators.RESCHEDULE_CALLBACK_REQUEST.click()\n..\\..\\..\\..\\..\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15450: in click\n    self._sync(\n..\\..\\..\\..\\..\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n..\\..\\..\\..\\..\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n..\\..\\..\\..\\..\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000002A880453950>\ncb = <function Channel.send.<locals>.<lambda> at 0x000002A88007CEA0>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nE           Call log:\nE             - waiting for locator(\"xpath=(//div[@title='Reschedule_CallBack_Request'])[1]\")\n\n..\\..\\..\\..\\..\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TargetClosedError"}, "steps": [{"name": "Initializing Page Objects", "status": "passed", "start": 1741593166692, "stop": 1741593166693}, {"name": "Navigating to Login Page", "status": "passed", "steps": [{"name": "Navigating to the website", "status": "passed", "start": 1741593166694, "stop": 1741593172896}], "start": 1741593166694, "stop": 1741593172896}, {"name": "Logging in as puchha.pavan@telusinternational.com", "status": "passed", "steps": [{"name": "Logging in with provided credentials", "status": "passed", "steps": [{"name": "Entering username", "status": "passed", "start": 1741593172897, "stop": 1741593173954}, {"name": "Clicking 'Next' after entering username", "status": "passed", "start": 1741593173954, "stop": 1741593174108}, {"name": "Entering domain name", "status": "passed", "start": 1741593174108, "stop": 1741593175049}, {"name": "Clicking 'Next' after entering domain", "status": "passed", "start": 1741593175050, "stop": 1741593175139}, {"name": "Entering password", "status": "passed", "start": 1741593175139, "stop": 1741593175183}, {"name": "Clicking login button to authenticate", "status": "passed", "start": 1741593175183, "stop": 1741593175293}], "parameters": [{"name": "userName", "value": "'puchha.pavan@telusinternational.com'"}, {"name": "domainName", "value": "'xd'"}, {"name": "passWord", "value": "'*Pavan@7351'"}], "start": 1741593172896, "stop": 1741593177294}], "start": 1741593172896, "stop": 1741593177294}, {"name": " dashboard page", "status": "passed", "steps": [{"name": "Validating Reposrts and analytics Dashboard page", "status": "passed", "start": 1741593177294, "stop": 1741593177335}], "start": 1741593177294, "stop": 1741593177441}, {"name": " centralRepo page", "status": "passed", "start": 1741593177441, "stop": 1741593177858}, {"name": "New Intent Template Inside Flow Repo", "status": "passed", "start": 1741593177858, "stop": 1741593216255}, {"name": "Editing Schedule Callback Nodes", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nCall log:\n  - waiting for locator(\"xpath=(//div[@title='Reschedule_CallBack_Request'])[1]\")\n\n", "trace": "  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\Playwright_Automation\\Fuel_iX_CX_Automation\\Fuel_iX_CX\\test_cases\\BA_UseCases\\test_Automated_Schedule_Call_Back.py\", line 93, in test_verify_the_schedule_call_back\n    pages[\"scb_page\"].editing_Reschedule_CallBack_Request_Node()\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\Playwright_Automation\\Fuel_iX_CX_Automation\\Fuel_iX_CX\\pages\\use_cases_pages\\Schedule_Call_Back_Pages\\scb_page.py\", line 724, in editing_Reschedule_CallBack_Request_Node\n    self.locators.RESCHEDULE_CALLBACK_REQUEST.click()\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 15450, in click\n    self._sync(\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py\", line 156, in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 488, in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "steps": [{"name": "Editing 'Schedule New CallBack Request' Node", "status": "passed", "attachments": [{"name": "Schedule_New_CallBack_Request", "source": "fec24c22-b9bc-4c88-8214-778135d7c2a1-attachment.png", "type": "image/png"}], "start": 1741593242565, "stop": 1741593263228}, {"name": "Editing 'Booking Success' Node", "status": "passed", "attachments": [{"name": "Booking_Success", "source": "b64c21cf-1da1-4945-84a5-c6d84ca6ab9a-attachment.png", "type": "image/png"}], "start": 1741593263228, "stop": 1741593284261}, {"name": "Editing 'Reschedule CallBack Request' Node", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nCall log:\n  - waiting for locator(\"xpath=(//div[@title='Reschedule_CallBack_Request'])[1]\")\n\n", "trace": "  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\Playwright_Automation\\Fuel_iX_CX_Automation\\Fuel_iX_CX\\pages\\use_cases_pages\\Schedule_Call_Back_Pages\\scb_page.py\", line 724, in editing_Reschedule_CallBack_Request_Node\n    self.locators.RESCHEDULE_CALLBACK_REQUEST.click()\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 15450, in click\n    self._sync(\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py\", line 156, in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 488, in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\puchha.pavan\\PycharmProjects\\PyTest_Python\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "start": 1741593284261, "stop": 1741593293238}], "attachments": [{"name": "Schedule_Callback_Get_Available_Slots", "source": "4d488306-088b-4f36-bb32-aa73098abd01-attachment.png", "type": "image/png"}], "start": 1741593216255, "stop": 1741593293240}], "attachments": [{"name": "log", "source": "be48277a-ccae-4008-ba98-12d154140ecb-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7b958c5c-78bc-45d4-830c-c2044f72415a-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "90fbe5fe-efe8-449d-831d-eefa62ea7385-attachment.txt", "type": "text/plain"}], "start": 1741593166686, "stop": 1741593293241, "uuid": "3bd8c137-fd42-4186-b5e1-6da943caa18e", "historyId": "461494865b0551186fb8dc66e83a9da7", "testCaseId": "461494865b0551186fb8dc66e83a9da7", "fullName": "test_Automated_Schedule_Call_Back#test_verify_the_schedule_call_back", "labels": [{"name": "feature", "value": "Schedule_Call_Back"}, {"name": "suite", "value": "test_Automated_Schedule_Call_Back"}, {"name": "host", "value": "BA-000311899"}, {"name": "thread", "value": "28964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Automated_Schedule_Call_Back"}]}